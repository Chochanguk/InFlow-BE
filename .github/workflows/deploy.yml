name: inflow-service

# eb_prac!
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
      - name: Install envsubst
        run: sudo apt-get install -y gettext

      ##################################################

      - name: Create application.yml.template
        run: |
          mkdir -p src/main/resources
          cat > src/main/resources/application.yml.template <<EOL
          server:
            port: 5000
          
          spring:
            servlet:
              multipart:
                max-file-size: 100MB
                max-request-size: 100MB
            
            datasource:
              driver-class-name: org.mariadb.jdbc.Driver
              url: jdbc:mariadb://\${RDS_HOSTNAME}:\${RDS_PORT}/\${RDS_DB_NAME}
              username: \${RDS_USERNAME}
              password: \${RDS_PASSWORD}
          
            jpa:
              generate-ddl: false
              show-sql: true
              database: mysql
              properties:
                hibernate:
                  '[format_sql]': true

            logging:
              level:
                com:
                  pado:
                    inflow: info # debug or info
          
          token:
            access-expiration-time: 2880000000
            refresh-expiration-time: 86400000
            access-secret: \${JWT_ACCESS_SECRET}
            refresh-secret: \${JWT_REFRESH_SECRET}
                  
          cloud:
            aws:
              credentials:
                access-key: \${AWS_ACCESS_KEY_ID}
                secret-key: \${AWS_SECRET_ACCESS_KEY}
              region:
                static: \${AWS_REGION}
              stack:
                auto: false
              s3:
                buckets:
                  inflow-emp-profile: "inflow-emp-profile"
                  inflow-contract: "inflow-contract"
                  inflow-vacation-attendance: "inflow-vacation-attendance"
                  inflow-excel-form: "inflow-excel-form"

          admin:
            password: \${ADMIN_PASSWORD}

          coolsms:
            api:
              key: \${SMS_KEY}
              secret: \${SMS_SECRET}
              number: \${SMS_NUMBER}
          EOL

      - name: Set Yaml
        run: |
          envsubst < src/main/resources/application.yml.template > src/main/resources/application.yml
          echo "Generated application.yml:"
          cat src/main/resources/application.yml
        env:
          RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}
          RDS_PORT: ${{ secrets.RDS_PORT }}
          RDS_DB_NAME: ${{ secrets.RDS_DB_NAME }}
          RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          SMS_KEY: ${{ secrets.SMS_KEY }}
          SMS_SECRET: ${{ secrets.SMS_SECRET }}
          SMS_NUMBER: ${{ secrets.SMS_NUMBER }}

      - name: Check for Tests
        run: |
          if git diff --name-only origin/main HEAD | grep -qvE '(\.xml$|\.yml$|config/)'; then
            if [ -z "$(find src/test -name '*ServiceTests.java')" ]; then
              echo "No ServiceTest found, failing the build."
              exit 1
            fi
          else
            echo "Only configuration files changed, skipping test check."
          fi

      ####################################################################################

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
        shell: bash

      - name: ChatGPT codeReviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff. (Please provide the code review in Korean.)
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.

      - name: Generate deployment package
        run: |
          ./gradlew clean build
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: inflow1
          environment_name: inflow1-env
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          use_existing_version_if_available: false
          wait_for_deployment: true
          wait_for_environment_recovery: 300