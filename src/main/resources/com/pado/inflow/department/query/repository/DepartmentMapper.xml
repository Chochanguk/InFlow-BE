<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pado.inflow.department.query.repository.DepartmentMapper">


    <!-- **** 사원찾기 / 인사 부서 관리 공통 **** -->
    <!-- 사원 찾기 버튼, 부서 관리 버튼 클릭 시 호출될 API -->
    <!-- 부서 폴더 구조 ui을 위한 쿼리 -->
    <select id="findDepartmentHierarchy" resultType="com.pado.inflow.department.query.dto.GetDepartmentHierarchyDTO">
        WITH RECURSIVE department_hierarchy AS (
            SELECT
                department_code,
                department_name,
                upper_department_code,
                department_name AS full_path
              FROM
                department
              WHERE
                upper_department_code IS NULL
            AND (disbanded_at IS NULL OR disbanded_at > CURRENT_TIMESTAMP)
            UNION ALL
            SELECT
                d.department_code,
                d.department_name,
                d.upper_department_code,
                CONCAT_WS('/', h.full_path, d.department_name) AS full_path
            FROM
                department d
            INNER JOIN
                department_hierarchy h
             ON d.upper_department_code = h.department_code
            WHERE
                (d.disbanded_at IS NULL OR d.disbanded_at > CURRENT_TIMESTAMP)
                )
            SELECT
                department_code AS departmentCode,
                department_name AS departmentName,
                upper_department_code AS upperDepartmentCode,
                full_path AS fullPath
            FROM
                department_hierarchy;
    </select>




    <!-- **** 사원 찾기 **** -->
    <!-- 키워드를 통해 (부서명 또는 특정 사원명을 입력하여) 해당 정보에 속하는 사원 조회 -->
    <!-- 사원 코드, 사원명, 부서 명으로 사원 목록 조회: 검색창에서 사원 목록 조회 API -->
    <!-- 현존하는 부서 목록만 조회되도록 조건 추가 -->
    <!-- 설명. 추가: 사원 휴대전화로 사원 검색 가능 -->
    <select id="findDepartmentMembersByKeyword" resultType="com.pado.inflow.department.query.dto.GetDepartmentMemberDTO">
    WITH RECURSIVE department_hierarchy AS (
        SELECT
            department_code,
            department_name,
            upper_department_code,
            department_name AS full_path
        FROM
            department
        WHERE
            upper_department_code IS NULL
            AND (disbanded_at IS NULL OR disbanded_at > NOW()) <!-- 현존하는 부서 조건 추가 -->
        UNION ALL
        SELECT
            d.department_code,
            d.department_name,
            d.upper_department_code,
            CONCAT_WS('/', h.full_path, d.department_name) AS full_path
        FROM
            department d
        INNER JOIN
            department_hierarchy h
        ON
            d.upper_department_code = h.department_code
        WHERE
            (d.disbanded_at IS NULL OR d.disbanded_at > NOW()) <!-- 현존하는 부서 조건 추가 -->
        )
        SELECT
            d.department_name AS departmentName,
            h.full_path AS departmentPath,
            dm.name AS employeeName,
            dm.profile_img_url AS profileImageUrl,
            dm.role_name AS roleName
        FROM
            department_member dm
        JOIN
            department_hierarchy h
        ON
            dm.department_code = h.department_code
        JOIN
            department d
        ON
            dm.department_code = d.department_code
        WHERE
            (
                h.full_path LIKE CONCAT('%', #{keyword}, '%')
                AND NOT EXISTS (
                    SELECT
                        1
                    FROM
                        department_member
                    WHERE
                        name = #{keyword}
            )
        )
        OR dm.name LIKE CONCAT('%', #{keyword}, '%')
        OR dm.employee_number = #{keyword}
        OR REPLACE(dm.phone_number, '-', '') LIKE CONCAT('%', REPLACE(#{keyword}, '-', ''), '%');

    </select>


    <!-- 조직도의 하위 폴더를 통해 사원 목록 조회 -->
    <!-- 부서 코드를 통한 사원 리스트 조회 -->
    <select id="findDepartmentMembersByDepartmentCode"
            resultType="com.pado.inflow.department.query.dto.GetDepartmentMemberDTO">
        WITH RECURSIVE department_hierarchy AS (
            SELECT
                department_code,
                department_name,
                upper_department_code,
                department_code AS full_path_code,
                department_name AS full_path
              FROM
                department
              WHERE
                upper_department_code IS NULL
                AND (disbanded_at IS NULL OR disbanded_at > NOW()) <!-- 현존하는 부서 조건 추가 -->

        UNION ALL
            SELECT
                d.department_code,
                d.department_name,
                d.upper_department_code,
                CONCAT_WS('/', h.full_path_code, d.department_code) AS full_path_code,
                CONCAT_WS('/', h.full_path, d.department_name) AS full_path
              FROM
                department d
              INNER JOIN
                department_hierarchy h
                ON
                d.upper_department_code = h.department_code
                WHERE
                (d.disbanded_at IS NULL OR d.disbanded_at > NOW()) <!-- 현존하는 부서 조건 추가 -->
            )
            SELECT
                d.department_name AS departmentName,
                h.full_path AS departmentPath,
                dm.name AS employeeName,
                dm.profile_img_url AS profileImageUrl,
                dm.role_name AS roleName
            FROM
                department_member dm
            JOIN
                department_hierarchy h
            ON
                dm.department_code = h.department_code
            JOIN
            department d
            ON
                dm.department_code = d.department_code
            WHERE
            (
                h.full_path_code LIKE CONCAT('%', #{departmentCode}, '%') -- 하위 부서를 포함한 경로
                OR h.department_code = #{departmentCode}                  -- 현재 부서 코드
            );
    </select>

    <!-- 사원 코드로 사원 상세 정보 조회 -->
    <select id="findDepartmentMemberDetailByMemberCode"
            resultType="com.pado.inflow.department.query.dto.GetMemberDetailFromListDTO">
        WITH RECURSIVE department_hierarchy AS (
        -- 최상위 부서
        SELECT
        department_code,
        department_name,
        upper_department_code,
        department_name AS full_path
        FROM
        department
        WHERE
        upper_department_code IS NULL
        AND (disbanded_at IS NULL OR disbanded_at > NOW()) -- 현존하는 부서 조건 추가
        UNION ALL
        -- 하위 부서
        SELECT
        d.department_code,
        d.department_name,
        d.upper_department_code,
        CONCAT_WS('/', h.full_path, d.department_name) AS full_path
        FROM
        department d
        INNER JOIN
        department_hierarchy h
        ON
        d.upper_department_code = h.department_code
        WHERE
        (d.disbanded_at IS NULL OR d.disbanded_at > NOW()) -- 현존하는 부서 조건 추가
        )
        SELECT
        d.department_name AS departmentName,
        h.full_path AS departmentPath,
        dm.name AS employeeName,
        dm.profile_img_url AS profileImageUrl,
        dm.role_name AS roleName,
        dm.email AS employeeEmail,
        dm.phone_number AS employeePhoneNumber,
        dm.attendance_status_type_name AS attendanceStatusTypeName
        FROM
        department_member dm
        JOIN
        department_hierarchy h
        ON
        dm.department_code = h.department_code
        JOIN
        department d
        ON
        dm.department_code = d.department_code
        WHERE
        dm.employee_number = #{employeeNumber};
    </select>


    <!-- **** 인사팀 권한  - 부서 관리 **** -->
    <!-- 설명. 1. 부서 코드를 통해 부서 정보 상세 조회 -> 다시해야함 (인사 기본 테이블 조인)-->
    <select id="findDepartmentDetailByDepartmentCode"
            resultType="com.pado.inflow.department.query.dto.GetDepartmentDetailDTO">
        SELECT
            d.department_name AS departmentName,
            d.department_code AS departmentCode,
            ud.department_name AS upperDepartmentName,
            d.min_employee_num AS minEmployeeNum,
            dm.name AS departmentHeadName
          FROM
            department d
        LEFT JOIN
            department ud
        ON
            d.upper_department_code = ud.department_code
        LEFT JOIN
            (SELECT *
            FROM department_member
            WHERE role_name = '부서장') dm
        ON
            d.department_code = dm.department_code
        WHERE
            d.department_code = #{departmentCode}
    </select>


    <!-- 2. 키워드 검색을 통한 부서 목록 조회 ( 부서명, 부서코드, 부서장)  -->
    <!-- 부서명, 부서코드, 부서장 중 하나를 입력하면 해당 관련 부서 목록이 나옴 --> 
    <!-- 현존하는 부서만 검색되도록 -->
    <select id="findDepartmentListByKeyword" resultType="com.pado.inflow.department.query.dto.GetDepartmentListByKeywordDTO">
        WITH RECURSIVE department_hierarchy AS (
        -- 최상위 부서
        SELECT
            d.department_code,
            d.department_name,
            d.upper_department_code,
            CAST(d.department_name AS CHAR(255)) AS full_path -- 경로 초기값
          FROM
            department d
          WHERE
            d.upper_department_code IS NULL -- 최상위 부서 조건
          AND (d.disbanded_at IS NULL OR d.disbanded_at > NOW()) -- 현존하는 부서 조건
        UNION ALL
        -- 하위 부서로 내려가면서 경로 누적
        SELECT
            d.department_code,
            d.department_name,
            d.upper_department_code,
            CONCAT(h.full_path, '/', d.department_name) AS full_path -- 상위 부서 경로에 현재 부서 추가
          FROM
            department d
          INNER JOIN
            department_hierarchy h
          ON
            d.upper_department_code = h.department_code
        )
        SELECT DISTINCT
            h.department_code AS departmentCode,
            h.full_path AS departmentPath,
            h.department_name AS departmentName
        FROM
            department_hierarchy h
        LEFT JOIN
            department_member dm
        ON
            h.department_code = dm.department_code
        WHERE
            h.full_path LIKE CONCAT('%', #{keyword}, '%') -- 부서명 검색
            OR h.department_code LIKE CONCAT('%', #{keyword}, '%') -- 부서코드 검색
            OR dm.name LIKE CONCAT('%', #{keyword}, '%') -- 부서장 이름 검색
        ORDER BY
            h.full_path;
    </select>


    <!-- **** 팀장 권한 - 내 부서 관리 **** -->
    <!-- 1. 부서 코드를 통한 사원 목록 조회 -> 사원 찾기에서 키워드로 사원 목록 조회하는 쿼리 재탕 -->
    <select id="findDepartmentMemberListByDepartmentCode" resultType="com.pado.inflow.department.query.dto.GetDepartmentListByKeywordDTO">

    </select>
    <!-- 2. 사원 코드를 통한 사원 상세 정보 조회 -> 인사 기본 테이블 조인해서 정보 가져오기 -->


    







</mapper>