<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pado.inflow.department.query.repository.DepartmentMapper">


    <!-- 부서명 또는 특정 사원명을 입력하여 해당 정보에 속하는 사원 조회 -->
    <!-- 사원 코드, 사원명, 부서 명으로 사원 목록 조회: 검색창에서 사원 목록 조회 API -->
    <!-- 사원 목록을 JSON 형식으로 반환 -->
    <!-- 부서명, 사원명, 사원코드로 사원 목록 조회: JSON 반환 -->
    <select id="findDepartmentMembersByKeyword" resultType="com.pado.inflow.department.query.dto.GetDepartmentMemberDTO">
    WITH RECURSIVE department_hierarchy AS (
        SELECT
            department_code,
            department_name,
            upper_department_code,
            department_name AS full_path
        FROM
            department
        WHERE
            upper_department_code IS NULL
        UNION ALL
        SELECT
            d.department_code,
            d.department_name,
            d.upper_department_code,
            CONCAT_WS('/', h.full_path, d.department_name) AS full_path
        FROM
            department d
        INNER JOIN
            department_hierarchy h
        ON
            d.upper_department_code = h.department_code
        )
        SELECT
            d.department_name AS departmentName,
            h.full_path AS departmentPath,
            dm.name AS employeeName,
            dm.profile_img_url AS profileImageUrl,
            dm.role_name AS roleName
        FROM
            department_member dm
        JOIN
            department_hierarchy h
        ON
            dm.department_code = h.department_code
        JOIN
            department d
        ON
            dm.department_code = d.department_code
        WHERE
            (
                h.full_path LIKE CONCAT('%', #{keyword}, '%')
                AND NOT EXISTS (
                    SELECT
                        1
                    FROM
                        department_member
                    WHERE
                        name = #{keyword}
            )
        )
        OR dm.name LIKE CONCAT('%', #{keyword}, '%')
        OR dm.employee_number = #{keyword}
    </select>


    <!-- 조직도의 하위 폴더를 통해 사원 목록 조회 -->
    <select id="findDepartmentMembersByDepartmentCode" resultType="com.pado.inflow.department.query.dto.GetDepartmentMemberDTO">
        WITH RECURSIVE department_hierarchy AS (
            SELECT
                department_code,
                department_name,
                upper_department_code,
                department_code AS full_path_code,
                department_name AS full_path
              FROM
                department
              WHERE
                upper_department_code IS NULL
            UNION ALL
            SELECT
                d.department_code,
                d.department_name,
                d.upper_department_code,
                CONCAT_WS('/', h.full_path_code, d.department_code) AS full_path_code,
                CONCAT_WS('/', h.full_path, d.department_name) AS full_path
              FROM
                department d
              INNER JOIN
                department_hierarchy h
                ON
                d.upper_department_code = h.department_code
            )
            SELECT
                d.department_name AS departmentName,
                h.full_path AS departmentPath,
                dm.name AS employeeName,
                dm.profile_img_url AS profileImageUrl,
                dm.role_name AS roleName
            FROM
                department_member dm
            JOIN
                department_hierarchy h
            ON
                dm.department_code = h.department_code
            JOIN
            department d
            ON
                dm.department_code = d.department_code
            WHERE
            (
                h.full_path_code LIKE CONCAT('%', #{departmentCode}, '%') -- 하위 부서를 포함한 경로
                OR h.department_code = #{departmentCode}                  -- 현재 부서 코드
            );
    </select>

    <!-- 조직도의 하위 폴더를 통해 사원 목록 조회 -->
    <select id="findDepartmentMemberDetailByMemberCode"
            resultType="com.pado.inflow.department.query.dto.GetMemberDetailFromListDTO">
        WITH RECURSIVE department_hierarchy AS (
            SELECT
                department_code,
                department_name,
                upper_department_code,
                department_name AS full_path
              FROM
                department
            WHERE
                upper_department_code IS NULL
            UNION ALL
            SELECT
                d.department_code,
                d.department_name,
                d.upper_department_code,
                CONCAT_WS('/', h.full_path, d.department_name) AS full_path
              FROM
                department d
            INNER JOIN
                department_hierarchy h
             ON
                d.upper_department_code = h.department_code
        )
        SELECT
            d.department_name AS departmentName,
            h.full_path AS departmentPath,
            dm.name AS employeeName,
            dm.profile_img_url AS profileImageUrl,
            dm.role_name AS roleName,
            e.email AS employeeEmail,
            e.phone_number AS employeePhoneNumber
          FROM
            department_member dm
        JOIN
            department_hierarchy h
        ON
            dm.department_code = h.department_code
        JOIN
            department d
        ON
            dm.department_code = d.department_code
        JOIN
            employee e
        ON
            dm.employee_number = e.employee_number
        WHERE
        e.employee_number = #{employeeNumber} OR #{employeeNumber} IS NULL;
    </select>


</mapper>