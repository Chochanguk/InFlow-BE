<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pado.inflow.statistics.query.repository.OvertimeAllowanceMapper">
    <resultMap id="ResultMap" type="com.pado.inflow.statistics.query.dto.OvertimeAllowanceDTO" autoMapping="true">
        <result property="year" column="year"/>
        <result property="yearlyEmployeeCount" column="yearlyEmployeeCount"/>
        <result property="yearlyTotalAmount" column="yearlyTotalAmount"/>
        <collection property="monthly" ofType="com.pado.inflow.statistics.query.dto.MonthlyOvertimeAllowance" autoMapping="true">
            <result property="month" column="month"/>
            <result property="monthlyEmployeeCount" column="monthlyEmployeeCount"/>
            <result property="monthlyTotalAmount" column="monthlyTotalAmount"/>
            <collection property="depts" ofType="com.pado.inflow.statistics.query.dto.DeptOvertimeAllowance" autoMapping="true">
                <result property="departmentCode" column="departmentCode"/>
                <result property="departmentName" column="departmentName"/>
                <result property="employeeCount" column="employeeCount"/>
                <result property="totalAmount" column="totalAmount"/>
            </collection>
        </collection>
    </resultMap>

    <resultMap id="ResultMap2" type="com.pado.inflow.statistics.query.dto.DeptOvertimeAllowanceDTO" autoMapping="true">
        <result property="departmentCode" column="departmentCode"/>
        <result property="departmentName" column="departmentName"/>
        <collection property="years" ofType="com.pado.inflow.statistics.query.dto.YearsOA" autoMapping="true">
            <result property="year" column="year"/>
            <result property="yearlyEmployeeCount" column="yearlyEmployeeCount"/>
            <result property="yearlyTotalAmount" column="yearlyTotalAmount"/>
            <collection property="months" ofType="com.pado.inflow.statistics.query.dto.MonthsOA" autoMapping="true">
                <result property="month" column="month"/>
                <result property="monthlyEmployeeCount" column="monthlyEmployeeCount"/>
                <result property="monthlyTotalAmount" column="monthlyTotalAmount"/>
            </collection>
        </collection>
    </resultMap>

    <select id="getAllOA" resultMap="ResultMap" parameterType="string">
        WITH yearly_data AS
		  (SELECT YEAR(paid_at) AS YEAR,
				  COUNT(DISTINCT employee_id) AS yearlyEmployeeCount,
				  SUM(overtime_allowance) AS yearlyTotalAmount
		     FROM payment
		    GROUP BY YEAR(paid_at)),
			 monthly_data AS
		  (SELECT YEAR(paid_At) AS YEAR,
				  MONTH(paid_At) AS MONTH,
				  COUNT(DISTINCT employee_id) AS monthlyEmployeeCount,
				  SUM(overtime_allowance) AS monthlyTotalAmount
		     FROM payment
		    GROUP BY YEAR(paid_At),
					MONTH(paid_At)),
			 dept_data AS
		  (SELECT YEAR(P.paid_At) AS YEAR,
				  MONTH(P.paid_At) AS MONTH,
				  COUNT(DISTINCT P.employee_id) AS employeeCount,
				  SUM(P.overtime_allowance) AS totalAmount,
				  PP.department_code AS departmentCode,
				  DD.department_name AS departmentName
		     FROM payment P
		    INNER JOIN department_member PP ON P.employee_id = PP.employee_id
		    INNER JOIN department DD ON PP.department_code = DD.department_code
		    GROUP BY YEAR(P.paid_At),
					MONTH(P.paid_At),
					PP.department_code)
		SELECT Y.year AS YEAR,
			   Y.yearlyEmployeeCount AS yearlyEmployeeCount,
			   Y.yearlyTotalAmount AS yearlyTotalAmount,
			   M.month AS MONTH,
			   M.monthlyEmployeeCount AS monthlyEmployeeCount,
			   M.monthlyTotalAmount AS monthlyTotalAmount,
			   D.departmentCode AS departmentCode,
			   D.departmentName AS departmentName,
			   D.employeeCount AS employeeCount,
			   D.totalAmount AS totalAmount
		  FROM yearly_data Y
		  LEFT JOIN monthly_data M ON Y.year = M.year
		  LEFT JOIN dept_data D ON M.year = D.year
		   AND M.month = D.month 
	      <where>
			<if test="year != null">
				Y.year = #{year}
			</if>
		  </where>
		 ORDER BY Y.year DESC, M.month, D.departmentCode;
    </select>
	
	<select id="getDeptOA" resultMap="ResultMap2" parameterType="string">
		WITH yearly_data AS
		  (SELECT YEAR(paid_at) AS YEAR,
				  COUNT(DISTINCT employee_id) AS yearlyEmployeeCount,
				  SUM(overtime_allowance) AS yearlyTotalAmount
		     FROM payment
		    GROUP BY YEAR(paid_at)),
			 monthly_data AS
		  (SELECT YEAR(paid_at) AS YEAR,
				  MONTH(paid_at) AS MONTH,
				  COUNT(DISTINCT employee_id) AS monthlyEmployeeCount,
				  SUM(overtime_allowance) AS monthlyTotalAmount
		     FROM payment
		    GROUP BY YEAR(paid_at),
					MONTH(paid_at)),
			 dept_data AS
		  (SELECT YEAR(P.paid_at) AS YEAR,
				  MONTH(P.paid_at) AS MONTH,
				  COUNT(DISTINCT P.employee_id) AS employeeCount,
				  SUM(P.overtime_allowance) AS totalAmount,
				  PP.department_code AS departmentCode,
				  DD.department_name AS departmentName
		     FROM payment P
		    INNER JOIN department_member PP ON P.employee_id = PP.employee_id
		    INNER JOIN department DD ON PP.department_code = DD.department_code
		    GROUP BY YEAR(P.paid_at),
					MONTH(P.paid_at),
					PP.department_code)
		SELECT D.departmentCode AS departmentCode,
			   D.departmentName AS departmentName,
			   Y.year AS YEAR,
			   Y.yearlyEmployeeCount AS yearlyEmployeeCount,
			   Y.yearlyTotalAmount AS yearlyTotalAmount,
			   M.month AS MONTH,
			   M.monthlyEmployeeCount AS monthlyEmployeeCount,
			   M.monthlyTotalAmount AS monthlyTotalAmount
		  FROM yearly_data Y
		  LEFT JOIN monthly_data M ON Y.year = M.year
		  LEFT JOIN dept_data D ON M.year = D.year
		   AND M.month = D.month
	    <where>
			<if test="deptCode != null">
				D.departmentCode = #{deptCode}
			</if>
		</where>
		 ORDER BY Y.year DESC, M.month ASC;
	</select>
</mapper>