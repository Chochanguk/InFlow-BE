<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pado.inflow.attendance.query.repository.CommuteMapper">
    <resultMap id="commuteResultMap" type="com.pado.inflow.attendance.query.dto.CommuteDTO">
        <id property="commuteId" column="commute_id"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="remoteStatus" column="remote_status"/>
        <result property="overtimeStatus" column="overtime_status"/>
        <result property="employeeId" column="employee_id"/>
        <result property="attendanceRequestId" column="attendance_request_id"/>
    </resultMap>

    <select id="findCommutesByEmployeeId" resultMap="commuteResultMap" parameterType="map">
        SELECT
               A.commute_id
             , A.start_time
             , A.end_time
             , A.remote_status
             , A.overtime_status
             , A.employee_id
             , A.attendance_request_id
          FROM commute A
         WHERE A.employee_id = #{ employeeId }
           AND YEAR(A.start_time) = YEAR(#{ date })
           AND MONTH(A.start_time) = MONTH(#{ date })
         ORDER BY A.commute_id DESC
    </select>

    <select id="findOvertimesByEmployeeId" resultMap="commuteResultMap" parameterType="map">
        SELECT
               A.commute_id
             , A.start_time
             , A.end_time
             , A.remote_status
             , A.overtime_status
             , A.employee_id
             , A.attendance_request_id
          FROM commute A
         WHERE A.employee_id = #{ employeeId }
           AND A.overtime_status = 'Y'
           AND ((YEAR(A.start_time) = YEAR(#{ date }) AND MONTH(A.start_time) = MONTH(#{ date }))
           OR (YEAR(A.end_time) = YEAR(#{ date }) AND MONTH(A.end_time) = MONTH(#{ date })))
         ORDER BY A.commute_id DESC
    </select>

    <select id="findTodayRemoteByEmployeeId" resultMap="commuteResultMap" parameterType="Long">
        SELECT
               A.commute_id
             , A.start_time
             , A.end_time
             , A.remote_status
             , A.overtime_status
             , A.employee_id
             , A.attendance_request_id
          FROM commute A
         WHERE A.attendance_request_id = (
            SELECT B.attendance_request_id
              FROM attendance_request B
             WHERE B.attendance_request_type_id = 1
               AND B.request_status = 'ACCEPT'
               AND B.cancel_status = 'N'
               AND DATE(B.start_date) = CURRENT_DATE
               AND B.employee_id = #{ employeeId }
         )
    </select>

    <select id="findTodayCommuteByEmployeeId" resultMap="commuteResultMap" parameterType="Long">
        SELECT
               A.commute_id
             , A.start_time
             , A.end_time
             , A.remote_status
             , A.overtime_status
             , A.employee_id
             , A.attendance_request_id
          FROM commute A
         WHERE A.employee_id = #{ employeeId }
           AND DATE(A.start_time) = CURRENT_DATE
           AND A.overtime_status = 'N'
    </select>

</mapper>