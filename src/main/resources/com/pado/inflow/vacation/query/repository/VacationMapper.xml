<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pado.inflow.vacation.query.repository.VacationMapper">
    <resultMap id="vacationResultMap" type="com.pado.inflow.vacation.query.dto.VacationDTO">
        <id property="vacationId" column="vacation_id"/>
        <result property="vacationName" column="vacation_name"/>
        <result property="vacationLeft" column="vacation_left"/>
        <result property="vacationUsed" column="vacation_used"/>
        <result property="createdAt" column="created_at"/>
        <result property="expiredAt" column="expired_at"/>
        <result property="expirationStatus" column="expiration_status"/>
        <result property="employeeId" column="employee_id"/>
        <result property="vacationTypeName" column="vacation_type_name"/>
    </resultMap>

    <select id="findLeftVacationsByEmployeeId" resultMap="vacationResultMap" parameterType="map">
        SELECT
               A.vacation_id
             , A.vacation_name
             , A.vacation_left
             , A.vacation_used
             , A.created_at
             , A.expired_at
             , A.expiration_status
             , A.employee_id
             , B.vacation_type_name
          FROM vacation A
          JOIN vacation_type B
            ON A.vacation_type_id = B.vacation_type_id
         WHERE A.employee_id = #{ employeeId } AND A.vacation_left > 0 AND A.expiration_status = 'N'
         ORDER BY A.vacation_id DESC
         LIMIT #{ elementsPerPage } OFFSET #{ offset }
    </select>

    <select id="getTotalLeftVacationsByEmployeeId" resultType="Integer" parameterType="Long">
        SELECT
               COUNT(*) AS TOTAL
          FROM vacation A
         WHERE A.employee_id = #{ employeeId } AND A.vacation_left > 0 AND A.expiration_status = 'N'
    </select>

    <select id="findUsedVacationsByEmployeeId" resultMap="vacationResultMap" parameterType="map">
        SELECT
               A.vacation_id
             , A.vacation_name
             , A.vacation_left
             , A.vacation_used
             , A.created_at
             , A.expired_at
             , A.expiration_status
             , A.employee_id
             , B.vacation_type_name
          FROM vacation A
          JOIN vacation_type B
            ON A.vacation_type_id = B.vacation_type_id
         WHERE A.employee_id = #{ employeeId } AND A.vacation_left = 0 AND A.expiration_status = 'N'
         ORDER BY A.vacation_id DESC
         LIMIT #{ elementsPerPage } OFFSET #{ offset }
    </select>

    <select id="getTotalUsedVacationsByEmployeeId" resultType="Integer" parameterType="Long">
        SELECT
               COUNT(*) AS TOTAL
          FROM vacation A
         WHERE A.employee_id = #{ employeeId } AND A.vacation_left = 0 AND A.expiration_status = 'N'
    </select>

    <select id="findLeftAllVacationsByEmployeeId" resultMap="vacationResultMap" parameterType="Long">
        SELECT
               A.vacation_id
             , A.vacation_name
             , A.vacation_left
             , A.vacation_used
             , A.created_at
             , A.expired_at
             , A.expiration_status
             , A.employee_id
             , B.vacation_type_name
          FROM vacation A
          JOIN vacation_type B
            ON A.vacation_type_id = B.vacation_type_id
         WHERE A.employee_id = #{ employeeId } AND A.vacation_left > 0 AND A.expiration_status = 'N'
         ORDER BY A.vacation_id ASC
    </select>

</mapper>